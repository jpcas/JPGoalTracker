[{"/Users/jpcas/Desktop/my-goaltracker/src/index.js":"1","/Users/jpcas/Desktop/my-goaltracker/src/App.js":"2","/Users/jpcas/Desktop/my-goaltracker/src/components/GoalForm.js":"3","/Users/jpcas/Desktop/my-goaltracker/src/components/GoalList.js":"4","/Users/jpcas/Desktop/my-goaltracker/src/components/Goal.js":"5"},{"size":196,"mtime":1610634283657,"results":"6","hashOfConfig":"7"},{"size":229,"mtime":1610570552724,"results":"8","hashOfConfig":"7"},{"size":1632,"mtime":1610640288121,"results":"9","hashOfConfig":"7"},{"size":1286,"mtime":1610738892557,"results":"10","hashOfConfig":"7"},{"size":1267,"mtime":1610739983941,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16ejj4p",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jpcas/Desktop/my-goaltracker/src/index.js",[],"/Users/jpcas/Desktop/my-goaltracker/src/App.js",[],["24","25"],"/Users/jpcas/Desktop/my-goaltracker/src/components/GoalForm.js",["26"],"import React, { useState, useEffect, useRef } from 'react';\n\n\nfunction GoalForm(props) {\n\nconst [input, setInput] = useState('');\n\nconst inputRef = useRef(null);\n\nuseEffect(() => {\n    inputRef.current.focus();\n});\n\nconst handleChange = e => {\n    setInput(e.target.value);\n};\n\nconst handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n        id: Math.floor(Math.random() * 10000),\n        text: input\n        });\n        setInput('');\n};\n\n    return (\n            <form className='goal-form' onSubmit={handleSubmit} >\n                {props.edit ? ( \n                <>\n                <input \n                    type='text'\n                    placeholder=\"update your goal\"\n                    value={input}\n                    name='text'\n                    ref={inputRef}\n                    className='goal-input edit'\n                    onChange={handleChange}\n                />\n                <button className='goal-button edit' onClick={handleSubmit} >Update a Goal</button>\n                </>\n                ):(\n                <>\n                    <input \n                        placeholder='Add a Goal'\n                        value={input}\n                        onChange={handleChange}\n                        name='text'\n                        className='goal-input'\n                        ref={inputRef}\n                    />\n                    <button onClick={handleSubmit} className='goal-button'>\n                        Add a Goal\n                    </button>\n                    </>\n                    )}               \n            </form>\n    );\n}\n\nexport default GoalForm;\n","/Users/jpcas/Desktop/my-goaltracker/src/components/GoalList.js",["27"],"/Users/jpcas/Desktop/my-goaltracker/src/components/Goal.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":40,"column":21,"nodeType":"34","endLine":40,"endColumn":44},{"ruleId":"35","severity":1,"message":"36","line":17,"column":13,"nodeType":"37","messageId":"38","endLine":17,"endColumn":25},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'updatedGoals' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]